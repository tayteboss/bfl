{{ 'product.css' | asset_url | stylesheet_tag }}

<product-info
  id="MainProduct-{{ section.id }}"
  class="section-{{ section.id }}-padding"
  data-section="{{ section.id }}"
  data-product-id="{{ product.id }}"
  data-update-url="true"
  data-url="{{ product.url }}"
>
  <script src="{{ 'product-info.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>

  {%- assign product_form_id = 'product-form-' | append: section.id -%}

  <section id="ProductInfo-{{ section.id }}" class="product-page tape-digitization-page">
    <div class="product-section">
      <div class="layout-wrapper layout-grid">
        <div class="product-images-wrapper">
          <div class="product-images-wrapper__image">
            {% if product.featured_image %}
              <img
                src="{{ product.featured_image | image_url }}"
                width="{{ product.featured_image.width }}"
                height="{{ product.featured_image.height }}"
                alt="{{ product.title }}"
                loading="lazy"
              >
            {% endif %}
          </div>
        </div>
        <div class="product-content product-content--tape-digitization">
          <div class="product-content__header tape-digitization-content__header">
            <h1 class="product-content__title type-h1-small">{{ product.title }}</h1>
            <div class="product-content__price badge-button badge-button--highlight">
              <span id="price-{{ section.id }}" class="type-p-large">{{ product.price | money }}</span>
            </div>
          </div>

          <div class="product-form tape-digitization-form">
            <div class="product-content__description-wrapper tape-digitization-content__description-wrapper">
              {%- if product.description != blank -%}
                <div class="product-content__description type-p-large">{{ product.description }}</div>
              {%- endif -%}
            </div>
            {%- if product.has_only_default_variant == false -%}
              <div class="contact-form__fields">
                <div class="contact-form__fields-inner">
                  <legend class="type-p tape-digitization-contact-form__legend">Type</legend>
                  {%- for option in product.options_with_values limit: 1 -%}
                    {%- liquid
                      assign selected_value = option.selected_value
                    -%}
                    <div class="form-field form-field--digitization">
                      <fieldset class="field__group" aria-label="Type">
                        <div class="bubble-options" role="radiogroup" aria-label="Type">
                          {%- for value in option.values -%}
                            <label class="bubble-option">
                              <input
                                id="Option-{{ section.id }}-1-{{ value | handle }}"
                                type="radio"
                                name="{{ option.name }}-1"
                                value="{{ value | escape }}"
                                {% if value == selected_value %}
                                  checked
                                {% endif %}
                                required
                              >
                              <div class="bubble-option__inner">
                                <div class="bubble-option__icon"></div>
                                <div class="bubble-option__label">{{ value }}</div>
                              </div>
                            </label>
                          {%- endfor -%}
                        </div>
                      </fieldset>
                    </div>
                  {%- endfor -%}
                </div>

                <div class="contact-form__fields-inner">
                  <legend class="type-p tape-digitization-contact-form__legend">Resolution</legend>
                  {%- for option in product.options_with_values offset: 1 limit: 1 -%}
                    {%- liquid
                      assign selected_value = 'Standard Definition'
                    -%}
                    <div class="form-field form-field--digitization form-field--wrap">
                      <fieldset class="field__group" aria-label="Resolution">
                        <div class="bubble-options bubble-options--wrap" role="radiogroup" aria-label="Resolution">
                          {%- for value in option.values -%}
                            <label class="bubble-option">
                              <input
                                id="Option-{{ section.id }}-2-{{ value | handle }}"
                                type="radio"
                                name="{{ option.name }}-2"
                                value="{{ value | escape }}"
                                {% if value == selected_value %}
                                  checked
                                {% endif %}
                                required
                              >
                              <div class="bubble-option__inner">
                                <div class="bubble-option__icon"></div>
                                <div class="bubble-option__label">{{ value }}</div>
                              </div>
                            </label>
                          {%- endfor -%}
                        </div>
                      </fieldset>
                    </div>
                  {%- endfor -%}
                </div>
              </div>
            {%- endif -%}

            <div class="contact-form__fields">
              <div class="contact-form__fields-inner">
                <legend class="type-p tape-digitization-contact-form__legend">Delivery</legend>
                <div class="form-field form-field--digitization">
                  <fieldset class="field__group" aria-label="Delivery method">
                    <div class="bubble-options" role="radiogroup" aria-label="Delivery method">
                      <label class="bubble-option">
                        <input
                          id="DeliveryWeTransfer--{{ section.id }}"
                          type="radio"
                          name="properties[Delivery method]"
                          value="WeTransfer"
                          checked
                          required
                        >
                        <div class="bubble-option__inner">
                          <div class="bubble-option__icon"></div>
                          <div class="bubble-option__label">WeTransfer</div>
                        </div>
                      </label>
                      <label class="bubble-option">
                        <input
                          id="DeliveryDropbox--{{ section.id }}"
                          type="radio"
                          name="properties[Delivery method]"
                          value="Dropbox"
                          required
                        >
                        <div class="bubble-option__inner">
                          <div class="bubble-option__icon"></div>
                          <div class="bubble-option__label">Dropbox</div>
                        </div>
                      </label>
                    </div>
                  </fieldset>
                </div>
              </div>
            </div>

            <div class="product-form__bottom tape-digitization-form__bottom">
              <div class="product-form__buy-button">
                {%- render 'buy-buttons',
                  product: product,
                  product_form_id: product_form_id,
                  section_id: section.id,
                  show_pickup_availability: false
                -%}
              </div>
              <div class="quantity-input-wrapper quantity-bubble tape-digitization-form__quantity-input-wrapper">
                <button
                  type="button"
                  class="quantity-btn quantity-btn--minus type-button-large"
                  name="minus"
                  aria-label="Decrease quantity"
                >
                  -
                </button>
                <input
                  id="Quantity-{{ section.id }}"
                  name="quantity"
                  type="number"
                  class="input-selector quantity-input quantity-number type-button-large"
                  form="{{ product_form_id }}"
                  min="1"
                  step="1"
                  value="1"
                  aria-label="Number of tapes"
                >
                <button
                  type="button"
                  class="quantity-btn quantity-btn--plus type-button-large"
                  name="plus"
                  aria-label="Increase quantity"
                >
                  +
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script type="application/ld+json">
      {{ product | structured_data }}
    </script>

    <script type="application/json" data-selected-variant>
      {{ product.selected_or_first_available_variant | json }}
    </script>

    <script type="application/json" id="ProductVariants-{{ section.id }}">
      {{ product.variants | json }}
    </script>

    <script>
      document.addEventListener('DOMContentLoaded', () => {
        // Fallback variant switcher: ensure hidden variant id updates when radios change
        try {
          const variantsDataEl = document.getElementById('ProductVariants-{{ section.id }}');
          const variants = variantsDataEl ? JSON.parse(variantsDataEl.textContent) : [];
          const optionNames = {{ product.options | json }};
          const root = document.getElementById('MainProduct-{{ section.id }}');
          const form = document.getElementById('{{ product_form_id }}');
          const idInput = form && form.querySelector('input[name="id"]');
          const priceEl = document.getElementById('price-{{ section.id }}');

          function getSelectedOptions() {
            return optionNames.map((name, index) => {
              // radios (button picker)
              const radio = root.querySelector(`input[name="${name}-${index + 1}"]:checked`);
              if (radio) return radio.value;
              // dropdown fallback
              const select = root.querySelector(`select[name="options[${name}]"]`);
              if (select) return select.value;
              return null;
            });
          }

          function findVariantByOptions(selected) {
            if (!Array.isArray(selected) || selected.includes(null)) return null;
            return variants.find((v) => {
              if (!v || !v.options) return false;
              return v.options.every((opt, i) => opt === selected[i]);
            }) || null;
          }

          function formatCents(cents) {
            const value = (cents || 0) / 100;
            try {
              return new Intl.NumberFormat(undefined, {
                style: 'currency',
                currency: '{{ cart.currency.iso_code }}',
                currencyDisplay: 'symbol',
                minimumFractionDigits: 2,
                maximumFractionDigits: 2,
              }).format(value);
            } catch (e) {
              return `${'{{ cart.currency.symbol }}'}${value.toFixed(2)}`;
            }
          }

          function handleVariantChange() {
            const selected = getSelectedOptions();
            const matched = findVariantByOptions(selected);
            if (matched && idInput) {
              idInput.value = matched.id;
              idInput.dispatchEvent(new Event('change', { bubbles: true }));
              if (priceEl) {
                priceEl.textContent = formatCents(matched.price);
              }
            }
          }

            root?.querySelector('variant-selects')?.addEventListener('change', handleVariantChange);
            root?.querySelectorAll('select[name^="options["]').forEach((sel) => sel.addEventListener('change', handleVariantChange));
            root?.querySelectorAll('input[type="radio"][name$="-1"], input[type="radio"][name$="-2"]').forEach((radio) => {
              radio.addEventListener('change', handleVariantChange);
            });

          // Initialize price and variant on first load
          handleVariantChange();
        } catch (e) {
          console.warn('Variant fallback handler error', e);
        }

        document.querySelectorAll('.quantity-input-wrapper').forEach((wrapper) => {
          const input = wrapper.querySelector('.quantity-input');
          const minusBtn = wrapper.querySelector('.quantity-btn--minus');
          const plusBtn = wrapper.querySelector('.quantity-btn--plus');

          const step = parseInt(input.step) || 1;
          const min = parseInt(input.min) || 1;
          const max = parseInt(input.max) || Infinity;

          function updateButtons() {
            let value = parseInt(input.value) || min;
            minusBtn.disabled = value <= min;
            plusBtn.disabled = value >= max;
          }

          updateButtons();

          minusBtn.addEventListener('click', () => {
            let value = parseInt(input.value) || min;
            if (value > min) {
              input.value = value - step;
              input.dispatchEvent(new Event('change', { bubbles: true }));
              updateButtons();
            }
          });
          plusBtn.addEventListener('click', () => {
            let value = parseInt(input.value) || min;
            if (value < max) {
              input.value = value + step;
              input.dispatchEvent(new Event('change', { bubbles: true }));
              updateButtons();
            }
          });
          input.addEventListener('input', updateButtons);
          input.addEventListener('change', updateButtons);
        });
      });
    </script>
  </section>

  {% schema %}
{
  "name": "Tape Digitization Product",
  "tag": "section",
  "class": "section",
  "blocks": [
    {
      "type": "variant_picker",
      "name": "Variant picker",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "picker_type",
          "options": [
            { "value": "dropdown", "label": "Dropdown" },
            { "value": "button", "label": "Buttons" }
          ],
          "default": "button",
          "label": "Picker type"
        },
        {
          "id": "swatch_shape",
          "label": "Swatch shape",
          "type": "select",
          "options": [
            { "value": "circle", "label": "Circle" },
            { "value": "square", "label": "Square" },
            { "value": "none", "label": "None" }
          ],
          "default": "circle"
        }
      ]
    }
  ],
  "settings": []
}
  {% endschema %}
</product-info>
