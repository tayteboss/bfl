{{ 'product.css' | asset_url | stylesheet_tag }}

<product-info
  id="MainProduct-{{ section.id }}"
  data-section="{{ section.id }}"
  data-product-id="{{ product.id }}"
  data-update-url="true"
  data-url="{{ product.url }}"
>
  <script src="{{ 'product-info.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>

  <section id="ProductInfo-{{ section.id }}" class="product-page">
    {%- assign product_form_id = 'product-form-' | append: section.id -%}

    <div class="layout-wrapper layout-grid">
      <div class="product-images-wrapper">
        {% if product.metafields.custom.product_badge %}
          <div class="product-images-wrapper__badge badge-button">
            {{ product.metafields.custom.product_badge | metafield_tag }}
          </div>
        {% endif %}
        {% render 'image', class: 'product-images-wrapper__image', image: product.featured_image %}
      </div>

      <div class="product-content">
        <div class="product-content__header">
          <h2 class="product-content__vendor type-h1-small">{{ product.vendor }}</h2>
          <h1 class="product-content__title type-h1-small">{{ product.title }}</h1>
        </div>
        <div class="product-content__price">
          <span class="type-p-large">{{ cart.currency.iso_code }}</span>
          <span class="type-p-large">{{ product.price | money }}</span>
        </div>
        <div class="product-content__description-wrapper">
          <p class="product-content__description type-p">{{ product.description }}</p>
        </div>

        <div class="product-form">
          {% form 'product', product %}
            {% comment %}
              {% if product.variants.size > 1 %}
                <fieldset class="variant-options">
                  <legend>Select Options:</legend>

                  {% for variant in product.variants %}
                    <input
                      type="radio"
                      id="variant-{{ variant.id }}"
                      name="id"
                      value="{{ variant.id }}"
                      {% if forloop.first %}
                        checked
                      {% endif %}
                      {% unless variant.available %}
                        disabled
                      {% endunless %}
                    >
                    <label for="variant-{{ variant.id }}">
                      <span class="var-title"> {{ variant.title }} </span>
                      <span class="exp">EXP</span>
                    </label>
                  {% endfor %}
                </fieldset>
              {% endif %}
            {% endcomment %}

            <div class="product-form__bottom">
              <div class="product-form__buy-button" data-hover-shake>
                {%- render 'buy-buttons',
                  product: product,
                  product_form_id: product_form_id,
                  section_id: section.id,
                  show_pickup_availability: true
                -%}
              </div>
              <div class="quantity-input-wrapper quantity-bubble">
                <button
                  type="button"
                  class="quantity-btn quantity-btn--minus type-button-large"
                  name="minus"
                  aria-label="Decrease quantity"
                >
                  -
                </button>
                <input
                  id="Quantity-{{ section.id }}"
                  name="quantity"
                  type="number"
                  class="input-selector quantity-input quantity-number type-button-large"
                  form="{{ product_form_id }}"
                  min="{{ product.selected_or_first_available_variant.quantity_rule.min | default: 1 }}"
                  {% if product.selected_or_first_available_variant.quantity_rule.max %}
                    max="{{ product.selected_or_first_available_variant.quantity_rule.max }}"
                  {% endif %}
                  step="{{ product.selected_or_first_available_variant.quantity_rule.increment | default: 1 }}"
                  value="{{ product.selected_or_first_available_variant.quantity_rule.min | default: 1 }}"
                  aria-label="quantity"
                >
                <button
                  type="button"
                  class="quantity-btn quantity-btn--plus type-button-large"
                  name="plus"
                  aria-label="Increase quantity"
                >
                  +
                </button>
              </div>
            </div>
          {% endform %}
        </div>
      </div>
    </div>
  </section>
  <script type="application/ld+json">
    {{ product | structured_data }}
  </script>

  <script type="application/json" data-selected-variant>
    {{ product.selected_or_first_available_variant | json }}
  </script>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      document.querySelectorAll('.quantity-input-wrapper').forEach((wrapper) => {
        const input = wrapper.querySelector('.quantity-input');
        const minusBtn = wrapper.querySelector('.quantity-btn--minus');
        const plusBtn = wrapper.querySelector('.quantity-btn--plus');

        const step = parseInt(input.step) || 1;
        const min = parseInt(input.min) || 1;
        const max = parseInt(input.max) || Infinity;

        // Update button disabled states
        function updateButtons() {
          let value = parseInt(input.value) || min;

          minusBtn.disabled = value <= min;
          plusBtn.disabled = value >= max;
        }

        // Initial state
        updateButtons();

        minusBtn.addEventListener('click', () => {
          let value = parseInt(input.value) || min;

          if (value > min) {
            input.value = value - step;
            input.dispatchEvent(new Event('change', { bubbles: true }));
            updateButtons();
          }
        });

        plusBtn.addEventListener('click', () => {
          let value = parseInt(input.value) || min;

          if (value < max) {
            input.value = value + step;
            input.dispatchEvent(new Event('change', { bubbles: true }));
            updateButtons();
          }
        });

        // Also update when user types directly
        input.addEventListener('input', updateButtons);
        input.addEventListener('change', updateButtons);
      });
    });
  </script>
</product-info>

{% schema %}
{
  "name": "product",
  "settings": [],
  "disabled_on": {
    "groups": ["header", "footer"]
  }
}
{% endschema %}
