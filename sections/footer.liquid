{{ 'footer.css' | asset_url | stylesheet_tag }}

<footer class="footer">
  <div class="layout-grid">
    {% render 'footer-links-list', title: 'Quick Links', links: section.settings.menu.links %}
    {% render 'footer-links-list', title: 'Customer Care', links: section.settings['second-menu'].links %}
    {% render 'footer-stores-list', title: 'Stores', links: section.settings['third-menu'].links %}
    <div class="footer-newsletter">
      <p>Join our newsletter</p>
    </div>
    <div class="footer-bottom">
      <div class="footer-bottom__top-bar">
        <div class="footer-credits">
          <a href="https://bienstudio.com.au" target="_blank" class="type-h6 hover-blinking"
            >Bien Studio <sup>Design</sup></a
          >
          <a href="https://tayte.co" target="_blank" class="type-h6 hover-blinking">Tayte.co <sup>Dev</sup></a>
        </div>
        <button class="footer-top-button type-h6 hover-blinking">Back to Top â–²</button>
      </div>
      {% render 'footer-logo' %}
    </div>
  </div>
  <div class="footer-image-wrapper">
    <img
      src="{{ section.settings.photo | image_url }}"
      width="auto"
      height="auto"
    >
  </div>
</footer>

<script>
  document.querySelector('.footer-top-button').addEventListener('click', () => {
    window.scrollTo({
      top: 0,
      behavior: 'smooth',
    });
  });

  // Cursor-driven step animation for footer logo weight (active only when footer is in view)
  (function () {
    const footer = document.querySelector('.footer');
    const footerLogo = document.querySelector('.footer__logo');
    if (!footer || !footerLogo) return;

    const STEP_PX = 300;
    const MIN_WGHT = 25;
    const MAX_WGHT = 200;

    function randomInt(min, max) {
      return Math.floor(Math.random() * (max - min + 1)) + min;
    }

    let lastX = null;
    let lastY = null;

    function maybeUpdateFromCursor(x, y) {
      if (lastX === null || lastY === null) {
        lastX = x;
        lastY = y;
        return;
      }
      const dx = x - lastX;
      const dy = y - lastY;
      const dist = Math.hypot ? Math.hypot(dx, dy) : Math.sqrt(dx * dx + dy * dy);
      if (dist >= STEP_PX) {
        lastX = x;
        lastY = y;
        const w = randomInt(MIN_WGHT, MAX_WGHT);
        footerLogo.style.fontVariationSettings = `"wght" ${w}`;
      }
    }

    let unsubscribe = null;
    let observing = false;
    let observer;

    function subscribeCursor() {
      if (unsubscribe || !window.CursorUtils || typeof window.CursorUtils.onMove !== 'function') return;
      unsubscribe = window.CursorUtils.onMove(({ x, y }) => maybeUpdateFromCursor(x, y));
    }

    function unsubscribeCursor() {
      if (typeof unsubscribe === 'function') {
        unsubscribe();
        unsubscribe = null;
      }
    }

    function initObserver() {
      if (!('IntersectionObserver' in window)) {
        subscribeCursor();
        return;
      }
      observer = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.target !== footer) return;
            if (entry.isIntersecting) {
              subscribeCursor();
            } else {
              unsubscribeCursor();
            }
          });
        },
        { root: null, threshold: 0 }
      );
      observer.observe(footer);
      observing = true;
    }

    initObserver();

    // Cleanup when this section is removed/updated in the theme editor
    document.addEventListener('shopify:section:unload', () => {
      unsubscribeCursor();
      if (observing && observer) observer.disconnect();
    });
  })();
</script>

{% schema %}
{
  "name": "footer",
  "settings": [
    {
      "type": "link_list",
      "id": "menu",
      "label": "t:labels.menu"
    },
    {
      "type": "link_list",
      "id": "second-menu",
      "label": "t:labels.menu"
    },
    {
      "type": "image_picker",
      "id": "photo",
      "label": "Floating image"
    },
    {
      "type": "image_picker",
      "id": "logo",
      "label": "Footer Logo"
    }
  ]
}
{% endschema %}
